<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Utils.CustomQuery2">
<TimeCreated>64483,39698.489988</TimeCreated>

<Query name="GetTable">
<Description>
Return ids from a table or a class</Description>
<Type>%Query</Type>
<FormalSpec>Table</FormalSpec>
<SqlProc>1</SqlProc>
<Parameter name="CONTAINID" value="1"/>
<Parameter name="ROWSPEC" value="Id:%String"/>
</Query>

<Method name="GetTableExecute">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,Table]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	#Dim Status As %Status = $$$OK

	If ##class(%Dictionary.ClassDefinition).%ExistsId(Table) {
		// Got a class, we need to calculate a table name and quote it
		#define ClassSQLTable(%c)    ($$$comClassKeyGet(%c,$$$cCLASSsqlschemaname)_"."_$$$comClassKeyGet(%c,$$$cCLASSsqltablename))
		Set Table = ##class(%CSP.UI.Portal.SQL.Home).Quoter2($$$ClassSQLTable(Table))
	}
	

	Set qHandle = ##class(%SQL.Statement).%ExecDirect(,"SELECT ID FROM " _ Table)
	If qHandle.%SQLCODE'=0 {
		Set Status = $$$ERROR($$$SQLError, qHandle.%SQLCODE, qHandle.%Message)
	}
	Quit Status
]]></Implementation>
</Method>

<Method name="GetTableFetch">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary,&Row:%List,&AtEnd:%Integer=0]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If qHandle.%Next() {
		// Same as in ROWSPEC
		Set Row = $Lb(qHandle.ID)
	} Else {
		/// No more data
		Set AtEnd = 1
		Set Row = ""
	}
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="GetTableClose">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&qHandle:%Binary]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Kill qHandle
	Quit $$$OK
]]></Implementation>
</Method>
</Class>
</Export>
