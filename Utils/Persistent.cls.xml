<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Utils.Persistent">
<Super>%Persistent</Super>
<TimeCreated>63866,77757.302743</TimeCreated>

<Property name="Main">
<Type>%String</Type>
</Property>

<Method name="Populate">
<Description>
	do ##class(Utils.Persistent).Populate()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Num=10,Main=$Namespace</FormalSpec>
<Implementation><![CDATA[

	for i=1:1:Num {
		set obj = ..%New()
		set obj.Main = Main _ i
		do obj.%Save()
	}
]]></Implementation>
</Method>

<Method name="Display">
<Description>
	do ##class(Utils.Persistent).Display()</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set tMainStatement = ##class(%SQL.Statement).%New()
	Set tStatus = tMainStatement.%Prepare("SELECT * FROM Utils.Persistent")
	If $$$ISERR(tStatus) {
		w $System.Status.GetErrorText(tStatus)
		Quit
	}
	
	Set tRS = tMainStatement.%Execute()
	While tRS.%Next() {
		w tRS.Main,!
	}
]]></Implementation>
</Method>

<Method name="GetExtentSize">
<Description>
w ##class(Utils.Persistent).GetExtentSize("Utils.Persistent")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Class:%String</FormalSpec>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	Set Global = ..GetDataGlobal(Class)
	Set Id = $Order(@Global@(""))
	Set Count = 0
	While Id '= "" {
		Set Id = $Order(@Global@(Id))
		Set Count = Count + 1
	}
	Return Count
]]></Implementation>
</Method>

<Method name="GetDataGlobal">
<Description>
w ##class(Utils.Persistent).GetGlobal("Utils.Persistent")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Class:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Return:'$$$comClassDefined(Class) ""
	Set Strategy = $$$comClassKeyGet(Class, $$$cCLASSstoragestrategy)
	Return $$$defMemberKeyGet(Class, $$$cCLASSstorage, Strategy, $$$cSDEFdatalocation)
]]></Implementation>
</Method>

<Method name="ExtSize">
<ClassMethod>1</ClassMethod>
<CodeMode>objectgenerator</CodeMode>
<ReturnType>%Integer</ReturnType>
<Implementation><![CDATA[
	
	Set ^a  = %code
	#dim Storage As %Dictionary.CompiledStorage
	set Strategy = %compiledclass.StorageStrategy
	Set StorageId = %compiledclass.Storages.FindObjectId(%compiledclass.Name_"||"_Strategy)
	Set Storage = %compiledclass.Storages.GetAt(StorageId)
	Set Global = Storage.DataLocation
    Do %code.WriteLine(" Set Id = $Order("_Global_"(""""))")
    Do %code.WriteLine(" Set Count = 0")
    Do %code.WriteLine(" While Id '= """" {")
    Do %code.WriteLine(" 	Set Id = $Order("_Global_"(Id))")
    Do %code.WriteLine(" 	Set Count = Count + 1")
    Do %code.WriteLine(" }")
    Do %code.WriteLine(" Return Count")
    Quit $$$OK
]]></Implementation>
</Method>

<Index name="NewIndex1">
<Properties>Main</Properties>
<Unique>1</Unique>
</Index>

<Method name="IsLastKnownRecordCheck">
<ClassMethod>1</ClassMethod>
<CodeMode>objectgenerator</CodeMode>
<FormalSpec>CitizenRef:%Integer,RelocationDate:%Date</FormalSpec>
<ReturnType>%Boolean</ReturnType>
<Implementation><![CDATA[
    set storagename="Default"
    set storageInd=%class.Storages.FindObjectId(%classname_"||"_storagename)
    set storage=%class.Storages.GetAt(storageInd)
    set indexLocation=storage.IndexLocation
    //set indexLocation=$name(@indexLocation@("CitizenRelocation"))
    do %code.WriteLine($c(9)_"quit $order("_indexLocation_"(""CitizenRelocation"",CitizenRef, RelocationDate))=""""")
    quit $$$OK
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^Utils.PersistentD</DataLocation>
<DefaultData>PersistentDefaultData</DefaultData>
<IdLocation>^Utils.PersistentD</IdLocation>
<IndexLocation>^Utils.PersistentI</IndexLocation>
<StreamLocation>^Utils.PersistentS</StreamLocation>
<Data name="PersistentDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Main</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
