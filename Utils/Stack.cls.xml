<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Utils.Stack">
<Super>%RegisteredObject</Super>
<TimeCreated>63686,67998.592793</TimeCreated>

<Method name="Test">
<Description>
do ##class(Utils.Stack).Test()</Description>
<ClassMethod>1</ClassMethod>
<ProcedureBlock>0</ProcedureBlock>
<Implementation><![CDATA[
	
	s a=1
	s b=2
	FOR loop=0:1:$STACK(-1) { 
		WRITE !,"Context level:",loop,?25,"Context type: ",$STACK(loop)
		WRITE !,?5,"Current place: ",$STACK(loop,"PLACE")
		WRITE !,?5,"Current source: ",$STACK(loop,"MCODE")
		WRITE ! 
    }
]]></Implementation>
</Method>

<Method name="ParentMethod">
<Description>
do ##class(Utils.Stack).ParentMethod()</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
 //new a,b,c
 set a="is public var"
 do ..ChildMethod()
]]></Implementation>
</Method>

<Method name="ChildMethod">
<ClassMethod>1</ClassMethod>
<PublicList>a,b,c</PublicList>
<Implementation><![CDATA[
 w
 w !,a
]]></Implementation>
</Method>

<Method name="GetStackAsArray">
<Description>
Do ##class(Utils.Stack).GetStackAsArray()</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	//Do ..StackAsArray()
	w !
	//Do ##class(Src.Utils.Test).Test2()
	FOR level=1:1:$STACK(-1) { 
	WRITE !,"Context level:",level,?25,"Context type: ",$STACK(level)
	WRITE !,?5,"Current place: ",$STACK(level,"PLACE")
	WRITE !,?5,"Current source: ",$STACK(level,"MCODE")
	set key = $zu(42,level,"")
	while (key'=""){
		if ($zu(41,level,key)=level){
			w key_"="_$zu(43,level,key),!
		}
		set key = $zu(42,level,key)
	}
		WRITE ! 
	}
]]></Implementation>
</Method>

<Method name="StackAsArray">
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
	Set ex = ##class(%Exception.SystemException).%New()
	Do ex.StackAsArray(.arr)
	zw arr
]]></Implementation>
</Method>
</Class>
</Export>
